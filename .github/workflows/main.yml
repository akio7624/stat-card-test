name: Run Python Script and Commit Changes

on:
  # 1시간 마다 자동으로 실행 (UTC 기준)
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

# 실행될 작업들
jobs:
  build:
    # 작업이 실행될 환경
    permissions:
      contents: write
    runs-on: ubuntu-latest

    # 작업의 단계들
    steps:
      # 1. 저장소의 코드를 가상 환경으로 가져오기
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 파이썬 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # 원하는 파이썬 버전을 사용하세요

      # 3. ⭐️ 의존성 라이브러리 설치 (이 부분 추가!) ⭐️
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 3. 파이썬 스크립트 실행
      - name: Run Python script
        env:
          # GITHUB_TOKEN이라는 환경 변수에 GitHub Secret인 GH_TOKEN 값을 할당
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # USER_NAME이라는 환경 변수에 GitHub Secret인 USER_NAME 값을 할당
          USER_NAME: ${{ secrets.USER_NAME }}
        run: python update-stats.py # 실제 파이썬 파일 이름으로 변경하세요

      # 4. 변경된 파일을 커밋하고 푸시하기
      - name: Commit and push if it changed
        run: |
          # Git 사용자 정보 설정 (봇 이름으로 커밋)
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # 변경된 파일이 있는지 확인
          git add .
          
          # 커밋 메시지를 작성하고 커밋
          git commit -m "update"
          
          # 원격 저장소에 푸시
          git push